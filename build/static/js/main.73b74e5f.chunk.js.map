{"version":3,"sources":["context/auth-content.js","pages/auth.js","components/Bookings/bookingList.js","components/Bookings/bookingsChart.js","components/Bookings/bookingsControl.js","pages/bookings.js","components/Modal/modal.js","components/Backdrop/backdrop.js","components/Events/EventItem.js","components/Events/EventList.js","pages/events.js","components/Nav/MainNav.js","App.js","index.js"],"names":["React","createContext","token","userId","login","tokenExp","logout","AuthPage","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","data","context","catch","error","console","log","createRef","className","onSubmit","this","htmlFor","type","id","ref","onClick","Component","contextType","AuthContext","bookingList","bookings","map","booking","key","_id","title","Date","createdAt","toLocaleDateString","onDelete","bind","BOOKINGS_BUCKETS","Cheap","min","max","Normal","Expensive","bookingsChart","chartData","labels","datasets","values","bucket","filtered","reduce","prev","price","push","fillColor","strokeColor","highlightFill","highlightStroke","style","textAlign","bookingsControl","activeOutput","onChange","BookingsPage","isLoading","outputType","fetchBookings","Authorization","deleteBooking","bookingId","filter","b","changeOutputType","content","Fragment","modal","children","onCancel","Cancel","onConfirm","Confirm","confirmText","backdrop","eventItem","eventId","date","creatorId","details","eventList","events","authUserId","creator","viewDetail","EventsPage","creating","selectedEvent","isActive","createEvent","confirmHandler","titleELRef","priceELRef","dateELRef","description","descriptionELRef","uEvents","cancelHandler","showDetails","find","bookEventHandler","fetchEvents","rows","EventList","mainNavigation","Consumer","to","App","Provider","from","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.73b74e5f.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default React.createContext({\n  token: null,\n  userId: null,\n  login: (token, userId, tokenExp) => {},\n  logout: () => {},\n});\n","import React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-content\";\n\nimport \"./auth.css\";\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true,\n  };\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState((prevState) => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = (event) => {\n    event.preventDefault();\n\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) return;\n\n    let requestBody = {\n      query: `\n        query Login($email: String!, $password: String!) {\n          login(email: $email, password: $password) {\n            userId\n            token\n            tokenExp\n          }\n        }\n      `,\n      variables: {\n        email: email,\n        password: password,\n      },\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n        mutation CreateUser($email: String!, $password: String!) {\n          createUser(userInput: {email: $email, password: $password}) {\n            _id\n            email\n          }\n        }\n      `,\n        variables: {\n          email: email,\n          password: password,\n        },\n      };\n    }\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.data.login.token)\n          this.context.login(\n            resData.data.login.token,\n            resData.data.login.userId,\n            resData.data.login.tokenExp\n          );\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <h1 className=\"heading\">{this.state.isLogin ? \"Login\" : \"Sign Up\"}</h1>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModeHandler}>\n            Switch to {this.state.isLogin ? \"Sign Up\" : \"Login\"}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;\n","import React from \"react\";\n\nimport \"./bookingList.css\";\n\nconst bookingList = (props) => (\n  <ul className=\"bookings__list\">\n    {props.bookings.map((booking) => {\n      return (\n        <li key={booking._id} className=\"bookings__item\">\n          <div className=\"bookings__item-data\">\n            {booking.event.title} -{\" \"}\n            {new Date(booking.createdAt).toLocaleDateString()}\n          </div>\n          <div className=\"bookings__item-actions\">\n            <button\n              className=\"btn\"\n              onClick={props.onDelete.bind(this, booking._id)}\n            >\n              Cancel\n            </button>\n          </div>\n        </li>\n      );\n    })}\n  </ul>\n);\n\nexport default bookingList;\n","import React from \"react\";\nimport { Bar as BarChart } from \"react-chartjs\";\n\nconst BOOKINGS_BUCKETS = {\n  Cheap: {\n    min: 0,\n    max: 100,\n  },\n  Normal: {\n    min: 101,\n    max: 999,\n  },\n  Expensive: {\n    min: 1000,\n    max: 1000000,\n  },\n};\n\nconst bookingsChart = (props) => {\n  const chartData = { labels: [], datasets: [] };\n  let values = [];\n\n  for (const bucket in BOOKINGS_BUCKETS) {\n    const filtered = props.bookings.reduce((prev, current) => {\n      if (\n        current.event.price > BOOKINGS_BUCKETS[bucket].min &&\n        current.event.price < BOOKINGS_BUCKETS[bucket].max\n      )\n        return prev + 1;\n      else return prev;\n    }, 0);\n    values.push(filtered);\n\n    chartData.labels.push(bucket);\n    chartData.datasets.push({\n      fillColor: \"rgba(170, 170, 170, .5)\",\n      strokeColor: \"rgba(170, 170, 170, .8)\",\n      highlightFill: \"rgba(170, 170, 170, .75)\",\n      highlightStroke: \"rgba(170, 170, 170, 1)\",\n      data: values,\n    });\n    values = [...values];\n    values[values.length - 1] = 0;\n  }\n\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <BarChart data={chartData} />\n    </div>\n  );\n};\n\nexport default bookingsChart;\n","import React from \"react\";\n\nimport \"./bookingsControl.css\";\n\nconst bookingsControl = (props) => {\n  return (\n    <div className=\"bookings_control\">\n      <button\n        className={props.activeOutput === \"List\" ? \"active\" : \"\"}\n        onClick={props.onChange.bind(this, \"List\")}\n      >\n        List\n      </button>\n      <button\n        className={props.activeOutput === \"Chart\" ? \"active\" : \"\"}\n        onClick={props.onChange.bind(this, \"Chart\")}\n      >\n        Chart\n      </button>\n    </div>\n  );\n};\n\nexport default bookingsControl;\n","import React, { Component } from \"react\";\n\nimport AuthContext from \"../context/auth-content\";\nimport BookingList from \"../components/Bookings/bookingList\";\nimport BookingChart from \"../components/Bookings/bookingsChart\";\nimport BookingControl from \"../components/Bookings/bookingsControl\";\nimport \"./events.css\";\n\nclass BookingsPage extends Component {\n  state = {\n    isLoading: false,\n    bookings: [],\n    outputType: \"List\",\n  };\n\n  static contextType = AuthContext;\n\n  componentDidMount() {\n    this.fetchBookings();\n  }\n\n  fetchBookings = () => {\n    this.setState({ isLoading: true });\n\n    const requestBody = {\n      query: `\n        query {\n          bookings {\n            _id\n            createdAt\n            event {\n              _id\n              title\n              date\n              price\n            }\n          }\n        }\n      `,\n    };\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.context.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const bookings = resData.data.bookings;\n        this.setState({ bookings: bookings, isLoading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  deleteBooking = (bookingId) => {\n    this.setState({ isLoading: true });\n\n    const requestBody = {\n      query: `\n        mutation cancelBooking($id: ID!) {\n          cancelBooking(bookingId: $id) {\n            _id\n            title\n          }\n        }\n      `,\n      variables: {\n        id: bookingId,\n      },\n    };\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.context.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState((prevState) => {\n          const uBookings = prevState.bookings.filter((b) => {\n            return b._id !== bookingId;\n          });\n          return { bookings: uBookings, isLoading: false };\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  changeOutputType = (outputType) => {\n    if (outputType === \"List\") this.setState({ outputType: \"List\" });\n    else this.setState({ outputType: \"Chart\" });\n  };\n\n  render() {\n    let content = (\n      <div className=\"spinner\">\n        <div className=\"lds-facebook\">\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    );\n\n    if (!this.state.isLoading) {\n      content = (\n        <React.Fragment>\n          <BookingControl\n            activeOutput={this.state.outputType}\n            onChange={this.changeOutputType}\n          />\n          <div>\n            {this.state.outputType === \"List\" ? (\n              <BookingList\n                bookings={this.state.bookings}\n                onDelete={this.deleteBooking}\n              />\n            ) : (\n              <BookingChart bookings={this.state.bookings} />\n            )}\n          </div>\n        </React.Fragment>\n      );\n    }\n    return <React.Fragment>{content}</React.Fragment>;\n  }\n}\n\nexport default BookingsPage;\n","import React from \"react\";\n\nimport \"./modal.css\";\n\nconst modal = (props) => (\n  <div className=\"modal\">\n    <header className=\"modal__header\">\n      <h1>{props.title}</h1>\n    </header>\n    <section className=\"modal__content\">{props.children}</section>\n    <section className=\"modal__actions\">\n      {props.onCancel && (\n        <button className=\"btn\" onClick={props.Cancel}>\n          Cancel\n        </button>\n      )}\n      {props.onConfirm && (\n        <button className=\"btn\" onClick={props.Confirm}>\n          {props.confirmText}\n        </button>\n      )}\n    </section>\n  </div>\n);\n\nexport default modal;\n","import React from \"react\";\n\nimport \"./backdrop.css\";\n\nconst backdrop = (props) => <div className=\"backdrop\"></div>;\n\nexport default backdrop;\n","import React from \"react\";\n\nimport \"./EventItem.css\";\n\nconst eventItem = (props) => (\n  <li key={props.eventId} className=\"events__list-item\">\n    <div>\n      <h1>{props.title}</h1>\n      <h2>\n        ${props.price} - {new Date(props.date).toLocaleDateString()}\n      </h2>\n    </div>\n    <div>\n      {props.userId === props.creatorId ? (\n        <p>Owner</p>\n      ) : (\n        <button\n          className=\"btn\"\n          onClick={props.details.bind(this, props.eventId)}\n        >\n          View Details\n        </button>\n      )}\n    </div>\n  </li>\n);\n\nexport default eventItem;\n","import React from \"react\";\n\nimport EventItem from \"./EventItem\";\nimport \"./Eventlsit.css\";\n\nconst eventList = (props) => {\n  const events = props.events.map((event) => {\n    return (\n      <EventItem\n        key={event._id}\n        eventId={event._id}\n        title={event.title}\n        price={event.price}\n        date={event.date}\n        userId={props.authUserId}\n        creatorId={event.creator._id}\n        details={props.viewDetail}\n      />\n    );\n  });\n  return <ul className=\"event__list\">{events}</ul>;\n};\nexport default eventList;\n","import React, { Component } from \"react\";\n\nimport Modal from \"../components/Modal/modal\";\nimport Backdrop from \"../components/Backdrop/backdrop\";\nimport AuthContext from \"../context/auth-content\";\nimport EventList from \"../components/Events/EventList\";\n\nimport \"./events.css\";\n\nclass EventsPage extends Component {\n  state = {\n    creating: false,\n    events: [],\n    isLoading: false,\n    selectedEvent: null,\n  };\n\n  isActive = true;\n\n  static contextType = AuthContext;\n\n  constructor(props) {\n    super(props);\n    this.titleELRef = React.createRef();\n    this.priceELRef = React.createRef();\n    this.dateELRef = React.createRef();\n    this.descriptionELRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  createEvent = () => {\n    this.setState({ creating: true });\n  };\n\n  confirmHandler = () => {\n    this.setState({ creating: false });\n\n    const title = this.titleELRef.current.value;\n    const price = +this.priceELRef.current.value;\n    const date = this.dateELRef.current.value;\n    const description = this.descriptionELRef.current.value;\n\n    if (\n      title.trim().length === 0 ||\n      description.trim().length === 0 ||\n      price <= 0 ||\n      date.trim().length === 0\n    )\n      return;\n\n    let requestBody = {\n      query: `\n        mutation {\n          createEvent(eventInput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\n            _id\n            title\n            description\n            date\n            price\n          }\n        }\n      `,\n    };\n\n    const token = this.context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState((prevState) => {\n          const uEvents = [...prevState.events];\n          uEvents.push({\n            _id: resData.data.createEvent._id,\n            title: resData.data.createEvent.title,\n            description: resData.data.createEvent.description,\n            data: resData.data.createEvent.date,\n            price: resData.data.createEvent.price,\n            creator: {\n              _id: this.context.userId,\n            },\n          });\n          return { events: uEvents };\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  cancelHandler = () => {\n    this.setState({ creating: false, selectedEvent: null });\n  };\n\n  fetchEvents() {\n    this.setState({ isLoading: true });\n\n    const requestBody = {\n      query: `\n        query {\n          events {\n            _id\n            title\n            description\n            date\n            price\n            creator {\n              _id \n              email\n            }\n          }\n        }\n      `,\n    };\n\n    // const token = this.context.token;\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        const events = resData.data.events;\n        if (this.isActive) this.setState({ events: events, isLoading: false });\n      })\n      .catch((error) => {\n        console.log(error);\n        if (this.isActive) this.setState({ isLoading: false });\n      });\n  }\n\n  showDetails = (eventId) => {\n    this.setState((prevState) => {\n      const selectedEvent = prevState.events.find(\n        (event) => event._id === eventId\n      );\n      this.setState({ selectedEvent: selectedEvent });\n    });\n  };\n\n  bookEventHandler = () => {\n    if (!this.context.token) {\n      this.setState({ selectedEvent: null });\n      return;\n    }\n\n    const requestBody = {\n      query: `\n        mutation {\n          bookEvent(eventId: \"${this.state.selectedEvent._id}\") {\n            _id\n            createdAt\n            updatedAt\n          }\n        }\n      `,\n    };\n\n    fetch(\"http://localhost:8000/graphql\", {\n      method: \"POST\",\n      body: JSON.stringify(requestBody),\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: \"Bearer \" + this.context.token,\n      },\n    })\n      .then((res) => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error(\"Failed!\");\n        }\n        return res.json();\n      })\n      .then((resData) => {\n        this.setState({ selectedEvent: null });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  componentWillUnmount() {\n    this.isActive = false;\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {(this.state.creating || this.state.selectedEvent) && <Backdrop />}\n        {this.state.creating && (\n          <Modal\n            title=\"Add Event\"\n            onCancel\n            onConfirm\n            Cancel={this.cancelHandler}\n            Confirm={this.confirmHandler}\n            confirmText=\"Confirm\"\n          >\n            <form>\n              <div className=\"form-control\">\n                <label htmlFor=\"title\">Title</label>\n                <input type=\"text\" id=\"title\" ref={this.titleELRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"price\">Price</label>\n                <input type=\"number\" id=\"price\" ref={this.priceELRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"date\">Date</label>\n                <input type=\"datetime-local\" id=\"date\" ref={this.dateELRef} />\n              </div>\n              <div className=\"form-control\">\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  id=\"description\"\n                  rows=\"4\"\n                  ref={this.descriptionELRef}\n                />\n              </div>\n            </form>\n          </Modal>\n        )}\n        {this.state.selectedEvent && (\n          <Modal\n            title={this.state.selectedEvent.title}\n            onCancel\n            onConfirm\n            Cancel={this.cancelHandler}\n            Confirm={this.bookEventHandler}\n            confirmText={this.context.token ? \"Book\" : \"Confirm\"}\n          >\n            <h1>{this.state.selectedEvent.title}</h1>\n            <h4>\n              ${this.state.selectedEvent.price} -{\" \"}\n              {new Date(this.state.selectedEvent.date).toLocaleDateString()}\n            </h4>\n            <p>{this.state.selectedEvent.description}</p>\n          </Modal>\n        )}\n        {this.context.token && (\n          <div className=\"events-control\">\n            <p>Share your own Events!!</p>\n            <button className=\"btn\" onClick={this.createEvent}>\n              Create Event\n            </button>\n          </div>\n        )}\n        {this.state.isLoading ? (\n          <div className=\"spinner\">\n            <div className=\"lds-facebook\">\n              <div></div>\n              <div></div>\n              <div></div>\n            </div>\n          </div>\n        ) : (\n          <EventList\n            events={this.state.events}\n            authUserId={this.context.userId}\n            viewDetail={this.showDetails}\n          />\n        )}\n      </React.Fragment>\n    );\n  }\n}\nexport default EventsPage;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport AuthContext from \"../../context/auth-content\";\nimport \"./MainNav.css\";\n\nconst mainNavigation = (props) => (\n  <AuthContext.Consumer>\n    {(context) => {\n      return (\n        <header className=\"mainNavigation\">\n          <div className=\"mainNavigation__logo\">\n            <h1>Navlogo</h1>\n          </div>\n          <nav className=\"mainNavigation__items\">\n            <ul>\n              {!context.token && (\n                <li>\n                  <NavLink to=\"/auth\">Authenticate</NavLink>\n                </li>\n              )}\n              <li>\n                <NavLink to=\"/events\">Events</NavLink>\n              </li>\n              {context.token && (\n                <React.Fragment>\n                  <li>\n                    <NavLink to=\"/bookings\">Bookings</NavLink>\n                  </li>\n                  <li>\n                    <button onClick={context.logout}>Logout</button>\n                  </li>\n                </React.Fragment>\n              )}\n            </ul>\n          </nav>\n        </header>\n      );\n    }}\n  </AuthContext.Consumer>\n);\n\nexport default mainNavigation;\n","import React, { Component } from \"react\";\nimport { BrowserRouter, Route, Redirect, Switch } from \"react-router-dom\";\n\nimport AuthPage from \"./pages/auth\";\nimport BookingsPage from \"./pages/bookings\";\nimport EventsPage from \"./pages/events\";\nimport MainNavigation from \"./components/Nav/MainNav\";\nimport AuthContext from \"./context/auth-content\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    token: null,\n    userId: null,\n  };\n\n  login = (token, userId, tokenExp) => {\n    this.setState({ token: token, userId: userId });\n  };\n\n  logout = () => {\n    this.setState({ token: null, userId: null });\n  };\n\n  render() {\n    return (\n      <BrowserRouter>\n        <AuthContext.Provider\n          value={{\n            token: this.state.token,\n            userId: this.state.userId,\n            login: this.login,\n            logout: this.logout,\n          }}\n        >\n          <MainNavigation />\n          <main className=\"main-content\">\n            <Switch>\n              {this.state.token && <Redirect from=\"/\" to=\"/events\" exact />}\n              {this.state.token && <Redirect from=\"/auth\" to=\"/events\" exact />}\n\n              {!this.state.token && <Route path=\"/auth\" component={AuthPage} />}\n              <Route path=\"/events\" component={EventsPage} />\n              {this.state.token && (\n                <Route path=\"/bookings\" component={BookingsPage} />\n              )}\n              {!this.state.token && <Redirect to=\"/auth\" exact />}\n            </Switch>\n          </main>\n        </AuthContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}